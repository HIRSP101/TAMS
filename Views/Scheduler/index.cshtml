@model SchedulerViewModel
<!DOCTYPE html>
<html>

<head>
    <title>Telegram Message Scheduler</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
</head>

<body>
    <div class="container mt-5">
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3>Schedule New Message</h3>
                    </div>
                    <div class="card-body">
                        @if (TempData["Success"] != null)
                        {
                            <div class="alert alert-success">@TempData["Success"]</div>
                        }
                        @if (TempData["Error"] != null)
                        {
                            <div class="alert alert-danger">@TempData["Error"]</div>
                        }
                        <form asp-action="ScheduleMessage" method="post">
                            <div class="mb-3">
                                <label class="form-label">Select Users</label>
                                <select multiple asp-for="SelectedUserIds" class="form-select" id="user-selector"
                                    required>
                                    @foreach (var user in Model.AvailableUsers)
                                    {
                                        <option value="@user.UserId">@user.UserDisplay</option>
                                    }
                                </select>
                            </div>
                            <div class="mb-3">
                                <h5>Selected Users <button class="badge bg-danger" id="clear-all">Clear all</button>
                                </h5>
                                <div class="form-control" id="active-users">
                                    <!-- Selected users will be dynamically added here -->
                                </div>
                            </div>
                            <div class="mb-3">
                                <label asp-for="NewMessage.Message" class="form-label">Message</label>
                                <textarea asp-for="NewMessage.Message" class="form-control" rows="4"
                                    required></textarea>
                            </div>
                            <div class="mb-3">
                                <label asp-for="NewMessage.ScheduledTime" class="form-label">Scheduled Time</label>
                                <input asp-for="NewMessage.ScheduledTime" type="datetime-local" class="form-control"
                                    required />
                            </div>
                            <div class="mb-3 form-check">
                                <input asp-for="NewMessage.IsRecurring" class="form-check-input" />
                                <label asp-for="NewMessage.IsRecurring" class="form-check-label">Recurring
                                    Message</label>
                            </div>
                            <div class="mb-3" id="recurrenceContainer" style="display:none;">
                                <label asp-for="NewMessage.RecurrencePattern" class="form-label">Recurrence Pattern
                                    (Cron Expression)</label>
                                <select class="form-select" asp-for="NewMessage.RecurrencePattern">
                                    <option value="">---------------</option>
                                    <option value="*/1 * * * *">Every 1 minutes</option>
                                    <option value="0 0 * ? * * *">Every Hour</option>
                                    <option value="0 30 7 ? * MON,TUE,WED,THU,FRI *">Morning Shift WeekDay</option>
                                    <option value="0 30 13 ? * MON,TUE,WED,THU,FRI *">Afternoon Shift WeekDay</option>
                                    <option value="0 30 17 ? * MON,TUE,WED,THU,FRI *">Evening Shift WeekDay</option>
                                </select>
                                <input class="mt-3 form-control" asp-for="NewMessage.RecurrencePattern"
                                    placeholder="Cron Expression here" />
                                <br />
                                <small class="form-text text-muted">
                                    Use standard cron syntax.
                                    <a href="https://crontab.guru/" target="_blank">Help with cron expressions</a>
                                </small>
                            </div>
                            <button type="submit" class="btn btn-primary w-100">Schedule Message</button>
                        </form>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3>Scheduled Messages</h3>
                        <div class="mb-3">
                            <label for="filterDate" class="form-label">Filter by Date</label>
                            <select id="filterDate" name="filterDate" class="form-select"
                                onchange="location.href='?filterDate=' + this.value">
                                <option value="">All Dates</option>
                                @foreach (var date in Model.ScheduledMessages.Select(m =>
                                m.ScheduledTime.Date).Distinct())
                                {
                                    <option selected value="@date.ToString("yyyy-MM-dd")">@date.ToString("d")</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (Model.ScheduledMessages.Any())
                        {
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>User</th>
                                        <th>Message</th>
                                        <th>Time</th>
                                        <!-- <th>Recurring</th> -->
                                        <th>Status</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var message in Model.ScheduledMessages)
                                    {
                                        <tr>
                                            <td>@message.UserId</td>
                                            <td>@message.Message</td>
                                            <td>@message.ScheduledTime.ToString("t")</td>
                                            <!-- 
                                                                                    <td>
                                            @(message.IsRecurring
                                                                    ? $"Recurring: {message.RecurrencePattern}"
                                                                    : message.ScheduledTime.ToString("g"))
                                                                                    </td>
                                                                                    -->
                                            <td>@(message.IsDone ? "Sent" : "Pending")</td>
                                            <td>
                                                @if (message.IsDone)
                                                {
                                                    <form asp-action="DeleteScheduledMessage" method="post">
                                                        <input type="hidden" name="jobId" value="@message.JobId" />
                                                        <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                                                        <button type="button" class="btn btn-light my-1 py-1" data-bs-toggle="modal"
                                                            data-bs-target="#exampleModal"><img width="20" height="20" src="https://img.icons8.com/ios-glyphs/20/search-more.png" alt="search-more"/></button>

                                                    </form>
                                                }
                                                else
                                                {
                                                    <div>
                                                    <form asp-action="CancelScheduledMessage" method="post">
                                                        <input type="hidden" name="jobId" value="@message.JobId" />
                                                        <button type="submit" class="btn btn-sm btn-danger">Cancel</button>
                                                    </form>
                                                    @if(!message.IsRecurring) {
                                                    <form asp-action="MarkMessageAsDoneAsync" method="post">
                                                        <input type="hidden" name="jobId" value="@message.JobId" />
                                                        <button type="submit" class="btn btn-sm btn-success">Mark</button>
                                                    </form>
                                                    }
                                                        <button type="button" class="btn btn-light my-1 py-1" data-bs-toggle="modal"
                                                        data-bs-target="#exampleModal"><img width="20" height="20" src="https://img.icons8.com/ios-glyphs/20/search-more.png" alt="search-more"/></button>
                                                    </div>
                                                }


                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <p class="text-muted">No scheduled messages.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    ...
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        var model = @Html.Raw(Json.Serialize(Model));
        console.log(model);
        var bootstrap_color = {
            1 : "primary",
            2 : "secondary",
            3 : "warning",
            4 : "dark",
            5 : "info"
        }
        document.addEventListener('DOMContentLoaded', function () {

            var user_arr = new Set();
            var isRecurringCheckbox = document.querySelector('#NewMessage_IsRecurring');
            var recurrenceContainer = document.getElementById('recurrenceContainer');

            isRecurringCheckbox.addEventListener('change', function () {
                recurrenceContainer.style.display = this.checked ? 'block' : 'none';
            });

            $("#user-selector").change(function () {
                var active_users = "";
                user_arr.clear();

                $("#user-selector option:selected").each(function () {
                    var current_name = $(this).text().split("(")[0].trim();
                    var user_id = $(this).val();
                    user_arr.add({ name: current_name, id: user_id });
                });

                user_arr.forEach(function (user) {
                    let x = Math.floor((Math.random() * 5) + 1);
                    active_users += `<span class="badge rounded-pill text-bg-primary bg-${bootstrap_color[x]} mx-1 active-badge" data-id="${user.id}">${user.name}</span>`;
                });

                $("#active-users").html(active_users);

                $(".active-badge").dblclick(function () {
                    var userId = $(this).data('id');
                    $(`#user-selector option[value="${userId}"]`).prop('selected', false);
                    $(this).remove();
                });
            });

            $("#clear-all").click(function (e) {
                e.preventDefault();
                $("#user-selector").val([]);  // Clear all selections
                user_arr.clear();
                $("#active-users").html("");
            });
        });
    </script>
</body>

</html>